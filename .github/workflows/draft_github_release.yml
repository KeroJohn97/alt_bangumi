name: Draft Github Release
on:
  # Enable manual run
  workflow_dispatch:
    # inputs:
    #   version:
    #     description: "Tag to create (e.g. v2.10.0). Must include 'v' and must match pubspec"
    #     required: true
    #     default: "v"
    #     type: string

# Declare default permissions as read only.
permissions: write-all

jobs:
  build:
    name: GET alt bangumi app version from pubspec.yaml
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: GET version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(sed -n 's/^version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p' ./pubspec.yaml)
          echo "version=v$VERSION" >> $GITHUB_OUTPUT

  draft_release:
    name: Draft Github release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Draft release with release notes
        id: create_release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}
          draft: true
          prerelease: false
          generate_release_notes: true

  create-build:
    name: Create ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}
    needs: [build, draft_release]
    strategy:
      matrix:
        target: [macOS, Windows, Linux, Android]
        include:
          - os: macos-latest
            target: macOS
            build_target: macos
            build_path: build/macos/Build/Products/Release
            asset_extension: .zip
            asset_content_type: application/zip
            asset_postfix: macos
          - os: windows-latest
            target: Windows
            build_target: windows
            build_path: build\windows\x64\runner\Release
            asset_extension: .zip
            asset_content_type: application/zip
            asset_postfix: windows-x86-64
          - os: ubuntu-latest
            target: Linux
            build_target: linux
            build_path: build/linux/x64/release/bundle
            asset_extension: .tar.gz
            asset_content_type: application/gzip
            asset_postfix: linux-arm-64
          - os: ubuntu-latest
            target: Android
            build_target: apk
            build_path: build/app/outputs/flutter-apk
            asset_extension: .apk
            asset_content_type: application/vnd.android.package-archive
            asset_postfix: app-release
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository (v2.11.0)
        uses: subosito/flutter-action@cc97e1648fff6ca5cc647fa67f47e70f7895510b
        with:
          # channel: master
          flutter-version: '3.16.4'

      - name: Install Linux dependencies
        if: matrix.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev
          
      - name: Install Android dependencies
        if: matrix.target == 'Android'
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          java-version: "11.0.18"
          distribution: temurin
        
      - run: flutter doctor -v

      # Checkout code, recreate missing files, and get packages.
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - run: |
          flutter create .
          flutter pub get

      - name: DOWNLOAD Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Configure Keystore for Android
        if: matrix.target == 'Android'
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        working-directory: android

      # Add missing secrets.json
      - name: ADD secrets.json before release
        run: |
          echo "{" > secrets.json
          echo "Authorization=${{ secrets.BANGUMI_AUTHORIZATION }}" >> secrets.json
          echo "X-RapidAPI-Key=${{ secrets.RAPID_API_KEY }}" >> secrets.json
          echo "X-RapidAPI-Host=${{ secrets.RAPID_API_HOST }}" >> secrets.json
          echo "}"

      # Clean the project
      - run: flutter clean

      # Get dependencies
      - run: flutter pub get

      # Build the application.
      - run: flutter build ${{ matrix.build_target }} --release

      # Package the build.
      # - name: Copy VC redistributables to release directory for Windows
      #   if: matrix.target == 'Windows'
      #   run: |
      #     try {
      #       Write-Host "Copying VC redistributables..."
      #       Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\msvcp140.dll') -Destination ${{ matrix.build_path }}
      #       Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140.dll') -Destination ${{ matrix.build_path }}
      #       Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140_1.dll') -Destination ${{ matrix.build_path }}
      #       Write-Host "Copying completed successfully."
      #     } catch {
      #       Write-Host "Error during copying: $_"
      #       exit 1
      #     }
      #   working-directory: ${{ matrix.build_path }}

      - name: RENAME build for Android
        if: matrix.target == 'Android'
        run: mv app-release.apk ${{ github.workspace }}/${{ matrix.target }}.apk
        working-directory: ${{ matrix.build_path }}

      - name: COMPRESS build for Linux
        if: matrix.target == 'Linux'
        run: tar czf ${{ github.workspace }}/${{ matrix.target }}.tar.gz *
        working-directory: ${{ matrix.build_path }}

      - name: COMPRESS build for macOS
        if: matrix.target == 'macOS'
        run: ditto -c -k --sequesterRsrc --keepParent alt_bangumi.app ${{ github.workspace }}/${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}

      - name: COMPRESS build for Windows
        if: matrix.target == 'Windows'
        run: compress-archive -Path * -DestinationPath ${{ github.workspace }}\${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}

      # - name: List contents of the asset directory
      #   run: |
      #     ls -R
      #   working-directory: ${{ matrix.build_path }}

      - name: CHECK file existence (v2.0.0)
        id: files_exists
        uses: andstor/file-existence-action@20b4d2e596410855db8f9ca21e96fbe18e12930b
        with:
          files: Alt Bangumi-${{ needs.build.outputs.version }}-${{ matrix.asset_postfix }}${{ matrix.asset_extension }}

      # Upload the build if it's not exist
      - name: ADD packaged build to release draft (v1.7.2)
        id: upload_release_asset
        # if: ${{ !steps.files_exists.outputs.files_exists }}
        uses: shogo82148/actions-upload-release-asset@dccd6d23e64fd6a746dce6814c0bde0a04886085
        # uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft_release.outputs.upload_url }}
          asset_path: ${{github.workspace}}/${{ matrix.target }}${{ matrix.asset_extension }}
          asset_name: Alt Bangumi-${{ needs.build.outputs.version }}-${{ matrix.asset_postfix }}${{ matrix.asset_extension }}
          asset_content_type: ${{ matrix.asset_content_type }}
